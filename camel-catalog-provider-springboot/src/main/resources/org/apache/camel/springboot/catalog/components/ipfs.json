{
 "component": {
    "kind": "component",
    "scheme": "ipfs",
    "syntax": "ipfs:ipfsHost:ipfsPort/ipfsCmd",
    "title": "IPFS",
    "description": "The camel-ipfs component provides access to the Interplanetary File System (IPFS).",
    "label": "file,ipfs",
    "deprecated": false,
    "deprecationNote": "",
    "async": false,
    "consumerOnly": false,
    "producerOnly": true,
    "lenientProperties": false,
    "javaType": "org.apache.camel.component.ipfs.IPFSComponent",
    "firstVersion": "2.23.0",
    "groupId": "org.apache.camel.springboot",
    "artifactId": "camel-ipfs-starter",
    "version": "1.0.0-SNAPSHOT"
  },
  "componentProperties": {
    "basicPropertyBinding": { "kind": "property", "displayName": "Basic Property Binding", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the component should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities" },
    "lazyStartProducer": { "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "bridgeErrorHandler": { "kind": "property", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." }
  },
  "properties": {
    "ipfsHost": { "kind": "path", "displayName": "Ipfs Host", "group": "producer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The ipfs host" },
    "ipfsPort": { "kind": "path", "displayName": "Ipfs Port", "group": "producer", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "secret": false, "description": "The ipfs port" },
    "ipfsCmd": { "kind": "path", "displayName": "Ipfs Cmd", "group": "producer", "required": false, "type": "string", "javaType": "java.lang.String", "enum": [ "add", "cat", "get", "version" ], "deprecated": false, "secret": false, "description": "The ipfs command" },
    "lazyStartProducer": { "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "outdir": { "kind": "parameter", "displayName": "Outdir", "group": "producer", "required": false, "type": "object", "javaType": "java.nio.file.Path", "deprecated": false, "secret": false, "configurationClass": "org.apache.camel.component.ipfs.IPFSConfiguration", "configurationField": "config", "description": "The ipfs output directory" },
    "basicPropertyBinding": { "kind": "parameter", "displayName": "Basic Property Binding", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Whether the endpoint should use basic property binding (Camel 2.x) or the newer property binding with additional capabilities" },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

